---
name: Lint and Analyze

"on":
  pull_request:

jobs:
  lint:
    name: "Lint and Analyze"

    runs-on: ubuntu-latest

    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v4

      - name: üèó Set up Python 3.12
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: ‚§µÔ∏è Get pip cache directory
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: ‚§µÔ∏è Establish pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: "${{ runner.os }}-pip-\
            ${{ hashFiles('requirements-dev.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üèó Install workflow dependencies
        run: |
          pip install -r requirements-dev.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: ‚§µÔ∏è Establish poetry cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: "venv-${{ steps.setup-python.outputs.python-version }}-\
            ${{ hashFiles('poetry.lock') }}"
          restore-keys: |
            venv-${{ steps.setup-python.outputs.python-version }}-

      - name: üèó Install package dependencies
        run: |
          poetry install --no-interaction

      - name: Get all changed files
        id: changed-files
        uses: tj-actions/changed-files@v42.1.0
        with:
          fetch-depth: 0

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
        env:
          SKIP: no-commit-to-branch
        with:
          extra_args: --files ${{ steps.changed-files.outputs.all_changed_files }}
