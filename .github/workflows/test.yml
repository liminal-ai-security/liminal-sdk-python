---
name: Test

"on":
  pull_request:
    branches:
      - development
      - main

jobs:
  test:
    name: 📝 Run Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: ⤵️ Get pip cache directory
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: ⤵️ Establish pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: "${{ runner.os }}-pip-\
            ${{ hashFiles('.github/workflows/requirements.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 🏗 Install workflow dependencies
        run: |
          pip install -r .github/workflows/requirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: ⤵️ Establish poetry cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: "venv-${{ steps.setup-python.outputs.python-version }}-\
            ${{ hashFiles('poetry.lock') }}"
          restore-keys: |
            venv-${{ steps.setup-python.outputs.python-version }}-

      - name: 🏗 Install package dependencies
        run: |
          poetry install --no-interaction

      - name: 🚀 Run pytest
        run: poetry run pytest --cov liminal tests
