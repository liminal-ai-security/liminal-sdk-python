[build-system]
requires = [
    "poetry-core==2.0.1",
]
build-backend = "poetry.core.masonry.api"

[project]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "anyio>=4.4.0",
    "cryptography==43.0.3",
    "httpx==0.28.1",
    "mashumaro==3.15",
    "msal==1.31.1",
    "requests>=2.32.2",
]
description = "The Liminal SDK for Python"
license = "Apache-2.0"
name = "liminal-sdk-python"
readme = "README.md"
requires-python = ">=3.11,<3.14"
version = "2025.02.0b0"

[project.optional-dependencies]
all = [
    "liminal-sdk-python[lint,release,test]",
]
lint = [
    "blacken-docs==1.19.1",
    "codespell==2.3.0",
    "darglint==1.8.1",
    "mypy==1.14.1",
    "pre-commit-hooks==5.0.0",
    "pre-commit==4.0.1",
    "pylint==3.3.3",
    "pytest-asyncio==0.25.2",
    "pytest==8.3.4",
    "ruff==0.9.2",
]
release = [
    "tomli==2.2.1",
    "tomli-w==1.2.0",
]
test = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.2",
    "pytest-cov==6.0.0",
    "pytest-httpx==0.35.0",
]

[tool.coverage.report]
exclude_lines = [
    "TYPE_CHECKING",
    "raise NotImplementedError",
]
fail_under = 100
show_missing = true

[tool.coverage.run]
source = [
    "liminal",
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
no_implicit_optional = true
platform = "linux"
python_version = "3.11"
show_error_codes = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
authors = [
    "Liminal AI <info@liminal.ai>",
]
packages = [
    { include = "liminal" },
]

[tool.pylint.BASIC]
class-const-naming-style = "any"
expected-line-ending-format = "LF"

[tool.pylint.DESIGN]
max-attributes = 20

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pylint.MAIN]
py-version = "3.11"
ignore = [
    "tests",
]
jobs = 2
init-hook = "from pathlib import Path; import sys; from pylint.config import find_default_config_files; sys.path.append( str(Path(next(find_default_config_files())).parent.joinpath('pylint/plugins'))\n    ) "
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]
persistent = false
fail-on = [
    "I",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "abstract-method",
    "too-many-arguments",
    "too-many-positional-arguments",
    "too-many-lines",
    "too-many-locals",
    "duplicate-code",
    "await-outside-async",
    "bad-str-strip-call",
    "bad-string-format-type",
    "bidirectional-unicode",
    "continue-in-finally",
    "duplicate-bases",
    "misplaced-bare-raise",
    "format-needs-mapping",
    "function-redefined",
    "invalid-all-object",
    "invalid-character-backspace",
    "invalid-character-esc",
    "invalid-character-nul",
    "invalid-character-sub",
    "invalid-character-zero-width-space",
    "logging-too-few-args",
    "logging-too-many-args",
    "missing-format-string-key",
    "mixed-format-string",
    "no-method-argument",
    "no-self-argument",
    "nonexistent-operator",
    "nonlocal-without-binding",
    "not-in-loop",
    "notimplemented-raised",
    "return-in-init",
    "return-outside-function",
    "syntax-error",
    "too-few-format-args",
    "too-many-format-args",
    "too-many-star-expressions",
    "truncated-format-string",
    "undefined-all-variable",
    "undefined-variable",
    "used-prior-global-declaration",
    "yield-inside-async-function",
    "yield-outside-function",
    "anomalous-backslash-in-string",
    "assert-on-string-literal",
    "assert-on-tuple",
    "bad-format-string",
    "bad-format-string-key",
    "bare-except",
    "binary-op-exception",
    "cell-var-from-loop",
    "duplicate-except",
    "duplicate-key",
    "duplicate-string-formatting-argument",
    "duplicate-value",
    "eval-used",
    "exec-used",
    "expression-not-assigned",
    "f-string-without-interpolation",
    "forgotten-debug-statement",
    "format-string-without-interpolation",
    "global-variable-not-assigned",
    "implicit-str-concat",
    "import-self",
    "inconsistent-quotes",
    "invalid-envvar-default",
    "keyword-arg-before-vararg",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "logging-not-lazy",
    "misplaced-future",
    "named-expr-without-context",
    "nested-min-max",
    "pointless-statement",
    "raise-missing-from",
    "redefined-builtin",
    "try-except-raise",
    "unused-argument",
    "unused-format-string-argument",
    "unused-format-string-key",
    "unused-import",
    "unused-variable",
    "useless-else-on-loop",
    "wildcard-import",
    "bad-classmethod-argument",
    "consider-iterating-dictionary",
    "empty-docstring",
    "invalid-name",
    "line-too-long",
    "missing-class-docstring",
    "missing-final-newline",
    "missing-function-docstring",
    "missing-module-docstring",
    "multiple-imports",
    "singleton-comparison",
    "subprocess-run-check",
    "superfluous-parens",
    "ungrouped-imports",
    "unidiomatic-typecheck",
    "unnecessary-direct-lambda-call",
    "unnecessary-lambda-assignment",
    "unnecessary-pass",
    "unneeded-not",
    "useless-import-alias",
    "wrong-import-order",
    "wrong-import-position",
    "comparison-of-constants",
    "comparison-with-itself",
    "consider-alternative-union-syntax",
    "consider-merging-isinstance",
    "consider-using-alias",
    "consider-using-dict-comprehension",
    "consider-using-generator",
    "consider-using-get",
    "consider-using-set-comprehension",
    "consider-using-sys-exit",
    "consider-using-ternary",
    "literal-comparison",
    "property-with-parameters",
    "super-with-arguments",
    "too-many-branches",
    "too-many-return-statements",
    "too-many-statements",
    "trailing-comma-tuple",
    "unnecessary-comprehension",
    "use-a-generator",
    "use-dict-literal",
    "use-list-literal",
    "useless-object-inheritance",
    "useless-return",
    "no-else-break",
    "no-else-continue",
    "no-else-raise",
    "no-else-return",
    "broad-except",
    "protected-access",
    "broad-exception-raised",
    "consider-using-f-string",
    "abstract-class-instantiated",
    "arguments-differ",
    "assigning-non-slot",
    "assignment-from-no-return",
    "assignment-from-none",
    "bad-exception-cause",
    "bad-format-character",
    "bad-reversed-sequence",
    "bad-super-call",
    "bad-thread-instantiation",
    "catching-non-exception",
    "comparison-with-callable",
    "deprecated-class",
    "dict-iter-missing-items",
    "format-combined-specification",
    "global-variable-undefined",
    "import-error",
    "inconsistent-mro",
    "inherit-non-class",
    "init-is-generator",
    "invalid-class-object",
    "invalid-enum-extension",
    "invalid-envvar-value",
    "invalid-format-returned",
    "invalid-hash-returned",
    "invalid-metaclass",
    "invalid-overridden-method",
    "invalid-repr-returned",
    "invalid-sequence-index",
    "invalid-slice-index",
    "invalid-slots-object",
    "invalid-slots",
    "invalid-star-assignment-target",
    "invalid-str-returned",
    "invalid-unary-operand-type",
    "invalid-unicode-codec",
    "isinstance-second-argument-not-valid-type",
    "method-hidden",
    "misplaced-format-function",
    "missing-format-argument-key",
    "missing-format-attribute",
    "missing-kwoa",
    "no-member",
    "no-value-for-parameter",
    "non-iterator-returned",
    "non-str-assignment-to-dunder-name",
    "nonlocal-and-global",
    "not-a-mapping",
    "not-an-iterable",
    "not-async-context-manager",
    "not-callable",
    "not-context-manager",
    "overridden-final-method",
    "raising-bad-type",
    "raising-non-exception",
    "redundant-keyword-arg",
    "relative-beyond-top-level",
    "self-cls-assignment",
    "signature-differs",
    "star-needs-assignment-target",
    "subclassed-final-class",
    "super-without-brackets",
    "too-many-function-args",
    "typevar-double-variance",
    "typevar-name-mismatch",
    "unbalanced-dict-unpacking",
    "unbalanced-tuple-unpacking",
    "unexpected-keyword-arg",
    "unhashable-member",
    "unpacking-non-sequence",
    "unsubscriptable-object",
    "unsupported-assignment-operation",
    "unsupported-binary-operation",
    "unsupported-delete-operation",
    "unsupported-membership-test",
    "used-before-assignment",
    "using-final-decorator-in-unsupported-version",
    "wrong-exception-operation",
]
enable = [
    "useless-suppression",
    "use-symbolic-message-instead",
]

[tool.pylint.TYPING]
runtime-typing = false

[tool.pylint.CODE_STYLE]
max-line-length-suggestions = 72

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "ANN101",
    "ANN102",
    "D202",
    "D203",
    "D213",
    "PLR0913",
    "PLW2901",
    "PT012",
    "TCH",
    "COM812",
    "COM819",
    "D206",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = [
    "liminal",
    "tests",
]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ARG001",
    "FBT001",
    "PLR2004",
    "S101",
    "SLF001",
]

[tool.uv]
required-version = "==0.5.21"

[tool.vulture]
min_confidence = 100
sort_by_size = true
